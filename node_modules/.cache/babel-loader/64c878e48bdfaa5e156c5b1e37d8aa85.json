{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEB PROJECTS\\\\appointment_planner\\\\src\\\\containers\\\\contactsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ContactForm } from '../components/contactForm';\nimport { TileList } from '../components/tileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ContactsPage(_ref) {\n  _s();\n\n  let {\n    contacts,\n    addContact\n  } = _ref;\n  // This is the parent component that will CONTROL the Form component\n  // This is a STATEFUL component\n  // Component for handling logic for adding contacts and listing current contacts\n  const [nameInput, setNameInput] = useState('');\n  const [phoneInput, setPhoneInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [isDuplicate, setIsDuplicate] = useState(false);\n  useEffect(() => {\n    for (let el in contacts) {\n      if (el.name === nameInput) {\n        setIsDuplicate;\n      }\n    }\n    /*for(let i=0; i < contacts.length; i++) {\r\n        if(contacts[i].name === nameInput) {\r\n            setIsDuplicate(true);\r\n        } else {\r\n            setIsDuplicate(false);\r\n        }\r\n    }*/\n\n  }, [contacts, nameInput]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!isDuplicate) {\n      addContact(nameInput, phoneInput, emailInput);\n      setNameInput('');\n      setPhoneInput('');\n      setEmailInput('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        nameInput: nameInput,\n        setNameInput: setNameInput,\n        phoneInput: phoneInput,\n        setPhoneInput: setPhoneInput,\n        emailInput: emailInput,\n        setEmailInput: setEmailInput,\n        handleSubmit: handleSubmit,\n        isDuplicate: isDuplicate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        array: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactsPage, \"9jNEqBQepFrhesyxt+vW8hsIUA4=\");\n\n_c = ContactsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useEffect","useState","ContactForm","TileList","ContactsPage","contacts","addContact","nameInput","setNameInput","phoneInput","setPhoneInput","emailInput","setEmailInput","isDuplicate","setIsDuplicate","el","name","handleSubmit","e","preventDefault"],"sources":["C:/WEB PROJECTS/appointment_planner/src/containers/contactsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ContactForm } from '../components/contactForm';\r\nimport { TileList } from '../components/tileList';\r\n\r\n\r\nexport function ContactsPage({contacts,addContact}) {\r\n    // This is the parent component that will CONTROL the Form component\r\n    // This is a STATEFUL component\r\n    // Component for handling logic for adding contacts and listing current contacts\r\n    const [nameInput, setNameInput] = useState('');\r\n    const [phoneInput, setPhoneInput] = useState('');\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [isDuplicate, setIsDuplicate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        for(let el in contacts) {\r\n            if(el.name === nameInput) {\r\n                setIsDuplicate\r\n            }\r\n        }\r\n        /*for(let i=0; i < contacts.length; i++) {\r\n            if(contacts[i].name === nameInput) {\r\n                setIsDuplicate(true);\r\n            } else {\r\n                setIsDuplicate(false);\r\n            }\r\n        }*/\r\n    }, [contacts, nameInput])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!isDuplicate) {\r\n            addContact(nameInput,phoneInput,emailInput);\r\n            setNameInput('');\r\n            setPhoneInput('');\r\n            setEmailInput('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <h2>Add Contact</h2>\r\n                <ContactForm \r\n                nameInput={nameInput}\r\n                setNameInput={setNameInput}\r\n                phoneInput={phoneInput}\r\n                setPhoneInput={setPhoneInput}\r\n                emailInput={emailInput}\r\n                setEmailInput={setEmailInput}\r\n                handleSubmit={handleSubmit}\r\n                isDuplicate={isDuplicate}\r\n                />\r\n            </section>\r\n\r\n            <section>\r\n                <h2>Contacts</h2>\r\n                <TileList\r\n                array={contacts}\r\n                />\r\n            </section>\r\n            \r\n        </div>\r\n    );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAGA,OAAO,SAASC,YAAT,OAA6C;EAAA;;EAAA,IAAvB;IAACC,QAAD;IAAUC;EAAV,CAAuB;EAChD;EACA;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACZ,KAAI,IAAIe,EAAR,IAAcV,QAAd,EAAwB;MACpB,IAAGU,EAAE,CAACC,IAAH,KAAYT,SAAf,EAA0B;QACtBO,cAAc;MACjB;IACJ;IACD;AACR;AACA;AACA;AACA;AACA;AACA;;EACK,CAbQ,EAaN,CAACT,QAAD,EAAWE,SAAX,CAbM,CAAT;;EAeA,MAAMU,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;;IACA,IAAG,CAACN,WAAJ,EAAiB;MACbP,UAAU,CAACC,SAAD,EAAWE,UAAX,EAAsBE,UAAtB,CAAV;MACAH,YAAY,CAAC,EAAD,CAAZ;MACAE,aAAa,CAAC,EAAD,CAAb;MACAE,aAAa,CAAC,EAAD,CAAb;IACH;EACJ,CARD;;EAUA,oBACI;IAAA,wBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,WAAD;QACA,SAAS,EAAEL,SADX;QAEA,YAAY,EAAEC,YAFd;QAGA,UAAU,EAAEC,UAHZ;QAIA,aAAa,EAAEC,aAJf;QAKA,UAAU,EAAEC,UALZ;QAMA,aAAa,EAAEC,aANf;QAOA,YAAY,EAAEK,YAPd;QAQA,WAAW,EAAEJ;MARb;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAeI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,QAAD;QACA,KAAK,EAAER;MADP;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH;;GA3DeD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}